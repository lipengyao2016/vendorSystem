<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vendor.mapper.UserRoleMembershipsMapper">
  <resultMap id="BaseResultMap" type="com.vendor.bean.user.UserRoleMemberships">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="uuid" jdbcType="CHAR" property="uuid" />
    <result column="roleUuid" jdbcType="CHAR" property="roleuuid" />
    <result column="userUuid" jdbcType="CHAR" property="useruuid" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdat" />
    <result column="modifiedAt" jdbcType="TIMESTAMP" property="modifiedat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uuid, roleUuid, userUuid, createdAt, modifiedAt
  </sql>
  <select id="selectByExample" parameterType="com.vendor.bean.user.UserRoleMembershipsCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userrolememberships
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.vendor.bean.user.UserRoleMembershipsCriteria">
    delete from userrolememberships
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vendor.bean.user.UserRoleMemberships">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into userrolememberships (uuid, roleUuid, userUuid, 
      createdAt, modifiedAt)
    values (#{uuid,jdbcType=CHAR}, #{roleuuid,jdbcType=CHAR}, #{useruuid,jdbcType=CHAR}, 
      #{createdat,jdbcType=TIMESTAMP}, #{modifiedat,jdbcType=TIMESTAMP})
  </insert>
  
  
    
    <insert id="batchInsert" parameterType="java.util.List" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into userrolememberships (uuid, roleUuid, userUuid, 
      createdAt, modifiedAt)
    values
	
	  <foreach collection ="list" item="userrole" index= "index" separator =",">
      (#{userrole.uuid,jdbcType=CHAR}, #{userrole.roleuuid,jdbcType=CHAR}, #{userrole.useruuid,jdbcType=CHAR}, 
      #{userrole.createdat,jdbcType=TIMESTAMP}, #{userrole.modifiedat,jdbcType=TIMESTAMP})
       </foreach >


  </insert>
  
  <insert id="insertSelective" parameterType="com.vendor.bean.user.UserRoleMemberships">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into userrolememberships
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="roleuuid != null">
        roleUuid,
      </if>
      <if test="useruuid != null">
        userUuid,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="modifiedat != null">
        modifiedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="roleuuid != null">
        #{roleuuid,jdbcType=CHAR},
      </if>
      <if test="useruuid != null">
        #{useruuid,jdbcType=CHAR},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedat != null">
        #{modifiedat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vendor.bean.user.UserRoleMembershipsCriteria" resultType="java.lang.Integer">
    select count(*) from userrolememberships
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userrolememberships
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.roleuuid != null">
        roleUuid = #{record.roleuuid,jdbcType=CHAR},
      </if>
      <if test="record.useruuid != null">
        userUuid = #{record.useruuid,jdbcType=CHAR},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedat != null">
        modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userrolememberships
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=CHAR},
      roleUuid = #{record.roleuuid,jdbcType=CHAR},
      userUuid = #{record.useruuid,jdbcType=CHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

</mapper>