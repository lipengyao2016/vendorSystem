<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vendor.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.vendor.bean.user.Users" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="headImgHref" property="headimghref" jdbcType="VARCHAR" />
    <result column="accountUUID" property="accountuuid" jdbcType="CHAR" />
    <result column="userOrganizationUUID" property="userorganizationuuid" jdbcType="CHAR" />
    <result column="departmentUUID" property="departmentuuid" jdbcType="CHAR" />
    <result column="createdAt" property="createdat" jdbcType="TIMESTAMP" />
    <result column="modifiedAt" property="modifiedat" jdbcType="TIMESTAMP" />
  </resultMap>


  <resultMap id="userRoleOrgs" type="com.vendor.bean.user.UserRoleOrgs" >
    <result column="name" property="name"/>
    <result column="ownerUUID" property="ownerUUID"/>
    <result column="mobile" property="mobile"/>
    <result column="roleUUID" property="roleUuid"/>
    <result column="userUuid" property="userUuid"/>
  </resultMap>

      <select id="getUserRole" resultMap="userRoleOrgs" parameterType="com.vendor.bean.user.UserRoleOrgQueryVo">
   SELECT u.name as name,ug.ownerUUID as ownerUUID,u.mobile as mobile,ur.roleUuid as roleUUID,u.uuid as userUuid
     FROM vd_users u,userrolememberships ur ,userorganizations ug WHERE
    u.userOrganizationUUID = ug.uuid and ur.userUuid = u.uuid

        <if test="ownerUUID != null" >
          and ug.ownerUUID =#{ownerUUID}
        </if>

        <if test="name != null" >
          and u.name LIKE  #{name}
        </if>

      </select>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uuid, name, email, sex, mobile, address, age, description, status, type, headImgHref, 
    accountUUID, userOrganizationUUID, departmentUUID, createdAt, modifiedAt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vendor.bean.user.UsersCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vd_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.vendor.bean.user.UsersCriteria" >
    delete from vd_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vendor.bean.user.Users" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vd_users (uuid, name, email, sex, 
      mobile, address, age, 
      description, status, type, 
      headImgHref, accountUUID, userOrganizationUUID, 
      departmentUUID, createdAt, modifiedAt
      )
    values (#{uuid,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, 
      #{mobile,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{type,jdbcType=CHAR}, 
      #{headimghref,jdbcType=VARCHAR}, #{accountuuid,jdbcType=CHAR}, #{userorganizationuuid,jdbcType=CHAR}, 
      #{departmentuuid,jdbcType=CHAR}, #{createdat,jdbcType=TIMESTAMP}, #{modifiedat,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vendor.bean.user.Users" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vd_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="headimghref != null" >
        headImgHref,
      </if>
      <if test="accountuuid != null" >
        accountUUID,
      </if>
      <if test="userorganizationuuid != null" >
        userOrganizationUUID,
      </if>
      <if test="departmentuuid != null" >
        departmentUUID,
      </if>
      <if test="createdat != null" >
        createdAt,
      </if>
      <if test="modifiedat != null" >
        modifiedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="headimghref != null" >
        #{headimghref,jdbcType=VARCHAR},
      </if>
      <if test="accountuuid != null" >
        #{accountuuid,jdbcType=CHAR},
      </if>
      <if test="userorganizationuuid != null" >
        #{userorganizationuuid,jdbcType=CHAR},
      </if>
      <if test="departmentuuid != null" >
        #{departmentuuid,jdbcType=CHAR},
      </if>
      <if test="createdat != null" >
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedat != null" >
        #{modifiedat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vendor.bean.user.UsersCriteria" resultType="java.lang.Integer" >
    select count(*) from vd_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vd_users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.headimghref != null" >
        headImgHref = #{record.headimghref,jdbcType=VARCHAR},
      </if>
      <if test="record.accountuuid != null" >
        accountUUID = #{record.accountuuid,jdbcType=CHAR},
      </if>
      <if test="record.userorganizationuuid != null" >
        userOrganizationUUID = #{record.userorganizationuuid,jdbcType=CHAR},
      </if>
      <if test="record.departmentuuid != null" >
        departmentUUID = #{record.departmentuuid,jdbcType=CHAR},
      </if>
      <if test="record.createdat != null" >
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedat != null" >
        modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vd_users
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=CHAR},
      name = #{record.name,jdbcType=CHAR},
      email = #{record.email,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      type = #{record.type,jdbcType=CHAR},
      headImgHref = #{record.headimghref,jdbcType=VARCHAR},
      accountUUID = #{record.accountuuid,jdbcType=CHAR},
      userOrganizationUUID = #{record.userorganizationuuid,jdbcType=CHAR},
      departmentUUID = #{record.departmentuuid,jdbcType=CHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>