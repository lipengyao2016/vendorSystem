<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vendor.mapper.DepartmentsMapper">
  <resultMap id="BaseResultMap" type="com.vendor.bean.user.Departments">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="uuid" jdbcType="CHAR" property="uuid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="upLevelDepartmentUUID" jdbcType="CHAR" property="upleveldepartmentuuid" />
    <result column="userOrganizationUUID" jdbcType="CHAR" property="userorganizationuuid" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdat" />
    <result column="modifiedAt" jdbcType="TIMESTAMP" property="modifiedat" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uuid, name, description, upLevelDepartmentUUID, userOrganizationUUID, status, 
    createdAt, modifiedAt
  </sql>
  <select id="selectByExample" parameterType="com.vendor.bean.user.DepartmentsCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.vendor.bean.user.DepartmentsCriteria">
    delete from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vendor.bean.user.Departments">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into departments (uuid, name, description, 
      upLevelDepartmentUUID, userOrganizationUUID, 
      status, createdAt, modifiedAt
      )
    values (#{uuid,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{upleveldepartmentuuid,jdbcType=CHAR}, #{userorganizationuuid,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{createdat,jdbcType=TIMESTAMP}, #{modifiedat,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vendor.bean.user.Departments">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into departments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="upleveldepartmentuuid != null">
        upLevelDepartmentUUID,
      </if>
      <if test="userorganizationuuid != null">
        userOrganizationUUID,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
      <if test="modifiedat != null">
        modifiedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="upleveldepartmentuuid != null">
        #{upleveldepartmentuuid,jdbcType=CHAR},
      </if>
      <if test="userorganizationuuid != null">
        #{userorganizationuuid,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedat != null">
        #{modifiedat,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vendor.bean.user.DepartmentsCriteria" resultType="java.lang.Integer">
    select count(*) from departments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update departments
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.upleveldepartmentuuid != null">
        upLevelDepartmentUUID = #{record.upleveldepartmentuuid,jdbcType=CHAR},
      </if>
      <if test="record.userorganizationuuid != null">
        userOrganizationUUID = #{record.userorganizationuuid,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createdat != null">
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedat != null">
        modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update departments
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      upLevelDepartmentUUID = #{record.upleveldepartmentuuid,jdbcType=CHAR},
      userOrganizationUUID = #{record.userorganizationuuid,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
 
</mapper>