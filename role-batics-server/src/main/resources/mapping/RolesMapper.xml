<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vendor.mapper.RolesMapper" >
  <resultMap id="BaseResultMap" type="com.vendor.bean.role.Roles" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="ownerUUID" property="owneruuid" jdbcType="VARCHAR" />
    <result column="ownerType" property="ownertype" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createdAt" property="createdat" jdbcType="TIMESTAMP" />
    <result column="modifiedAt" property="modifiedat" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.vendor.bean.role.Roles" extends="BaseResultMap" >
    <result column="permission" property="permission" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uuid, name, description, type, ownerUUID, ownerType, status, createdAt, modifiedAt
  </sql>
  <sql id="Blob_Column_List" >
    permission
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.vendor.bean.role.RolesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vendor.bean.role.RolesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.vendor.bean.role.RolesExample" >
    delete from roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  
  <insert id="insert" parameterType="com.vendor.bean.role.Roles" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roles (uuid, name, description, 
      type, ownerUUID, ownerType, 
      status, createdAt, modifiedAt, 
      permission)
    values (#{uuid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{owneruuid,jdbcType=VARCHAR}, #{ownertype,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createdat,jdbcType=TIMESTAMP}, #{modifiedat,jdbcType=TIMESTAMP}, 
      #{permission,jdbcType=LONGVARCHAR})
  </insert>
  
  
    <insert id="batchInsert" parameterType="java.util.List" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roles (uuid, name, description, 
      type, ownerUUID, ownerType, 
      status, createdAt, modifiedAt, 
      permission)
    values
	
	  <foreach collection ="list" item="role" index= "index" separator =",">
        (#{role.uuid,jdbcType=VARCHAR}, #{role.name,jdbcType=VARCHAR}, #{role.description,jdbcType=VARCHAR}, 
      #{role.type,jdbcType=VARCHAR}, #{role.owneruuid,jdbcType=VARCHAR}, #{role.ownertype,jdbcType=VARCHAR}, 
      #{role.status,jdbcType=VARCHAR}, #{role.createdat,jdbcType=TIMESTAMP}, #{role.modifiedat,jdbcType=TIMESTAMP}, 
      #{role.permission,jdbcType=LONGVARCHAR})
       </foreach >

	
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.vendor.bean.role.Roles" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="owneruuid != null" >
        ownerUUID,
      </if>
      <if test="ownertype != null" >
        ownerType,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdat != null" >
        createdAt,
      </if>
      <if test="modifiedat != null" >
        modifiedAt,
      </if>
      <if test="permission != null" >
        permission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="owneruuid != null" >
        #{owneruuid,jdbcType=VARCHAR},
      </if>
      <if test="ownertype != null" >
        #{ownertype,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdat != null" >
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedat != null" >
        #{modifiedat,jdbcType=TIMESTAMP},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vendor.bean.role.RolesExample" resultType="java.lang.Integer" >
    select count(*) from roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update roles
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.owneruuid != null" >
        ownerUUID = #{record.owneruuid,jdbcType=VARCHAR},
      </if>
      <if test="record.ownertype != null" >
        ownerType = #{record.ownertype,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdat != null" >
        createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedat != null" >
        modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP},
      </if>
      <if test="record.permission != null" >
        permission = #{record.permission,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update roles
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      ownerUUID = #{record.owneruuid,jdbcType=VARCHAR},
      ownerType = #{record.ownertype,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP},
      permission = #{record.permission,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update roles
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      ownerUUID = #{record.owneruuid,jdbcType=VARCHAR},
      ownerType = #{record.ownertype,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      createdAt = #{record.createdat,jdbcType=TIMESTAMP},
      modifiedAt = #{record.modifiedat,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>